-- 1. 학생이름과 주소지(이름으로 오름차순 정렬)
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3. 주소지가 강원도나 경기도, 1900년대 학번을 가진 학생 (이름 오름차순 정렬)
SELECT STUDENT_NAME "학생이름", STUDENT_NO "학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE ('강원%') OR  STUDENT_ADDRESS LIKE ('경기도%'))
    AND SUBSTR(STUDENT_NO,1,1)='9'
ORDER BY STUDENT_NAME;

-- 4. 법학과 교수 중 나이 내림차순
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR P
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY PROFESSOR_SSN; 

-- 5. 2004년 2학기에 'C3118100' 과목 수강한 학생들의 학점 조회(학점 높은 순, 학번 낮은 순)
SELECT STUDENT_NO, TO_CHAR(POINT, '9.99')
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
WHERE TERM_NO = 200402 AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO DESC;

-- 6. 학생 번호, 학생 이름, 학과 이름 (이름 오름차순)
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7. 과목 이름과 과목의 학과 이름
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8. 과목별 교수 이름
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON ( C.CLASS_NO = CP.CLASS_NO)
JOIN TB_PROFESSOR P ON (CP.PROFESSOR_NO = P.PROFESSOR_NO);

-- 9. '음악학과' 학생들의 평점(소수점 1자리까지)
SELECT S.STUDENT_NO "학번", STUDENT_NAME "학생 이름",  TO_CHAR(ROUND(AVG(NVL(POINT,0)), 1),'9.9') "평점"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, STUDENT_NAME;

-- 10. 학번이 'A313047'인 학생의 학과이름, 학생이름, 지도교수 이름
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 11. 2007년도에 '인간관계론' 과목을 수강한 학생이름, 수강학기
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT S 
JOIN TB_GRADE G USING (STUDENT_NO)
JOIN TB_CLASS C ON (G.CLASS_NO = C.CLASS_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = '2007' AND CLASS_NAME = '인간관계론';
    
-- 12. 예체능 계열 과목 중 담당교수 한 명도 배정받지 못한 과목 이름, 학과 이름
-- 36명
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '예체능';
--MINUS
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS_PROFESSOR CP
LEFT JOIN TB_CLASS C ON (CP.CLASS_NO = C.CLASS_NO)
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO); 

--     
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE C.CLASS_NO IN (SELECT C.CLASS_NO
                     FROM TB_CLASS C
                     JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
                     WHERE CATEGORY = '예체능'
                     MINUS
                     SELECT CLASS_NO
                     FROM TB_CLASS_PROFESSOR);
                              


-- 13. 서반어학과 학생들의 지도교수 이름, 지도교수가 없을 경우 '지도교수 미지정'
SELECT STUDENT_NAME "학생이름",
    CASE WHEN PROFESSOR_NAME IS NOT NULL
        THEN PROFESSOR_NAME
        ELSE '지도교수 미지정'
        END 지도교수
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과';

-- 14. 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생의 학번, 이름, 학과이름, 평점
SELECT 
    S.STUDENT_NO "학번", STUDENT_NAME "이름", DEPARTMENT_NAME "학과 이름", 
    TO_CHAR(ROUND(AVG(NVL(POINT,0)),1), '9.9') "평점"
FROM TB_STUDENT S
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO =D.DEPARTMENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY S.STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING TO_CHAR(AVG(NVL(POINT,0)), '9.9') >= 4.0
ORDER BY S.STUDENT_NO;

-- 15. 환경조경학과 전공과목들의 과목 별 평점
SELECT C.CLASS_NO, C.CLASS_NAME, TO_CHAR(ROUND(AVG(NVL(POINT,0)),1), '9.9') "평점"
FROM TB_CLASS C
JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
GROUP BY C.CLASS_NO, C.CLASS_NAME;

-- 16. 최경희 학생과 같은 과 학생들의 이름과 주소
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT WHERE STUDENT_NAME ='최경희')
    AND STUDENT_NAME<>'최경희';
    
-- 17. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번
SELECT S.STUDENT_NO, S.STUDENT_NAME
FROM TB_STUDENT S
JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
HAVING (AVG(NVL(POINT,0))) = (SELECT MAX(AVG(NVL(POINT,0)))
                              FROM TB_STUDENT S
                              JOIN TB_GRADE G ON (S.STUDENT_NO = G.STUDENT_NO)
                              JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
                             WHERE DEPARTMENT_NAME = '국어국문학과'
                             GROUP BY S.STUDENT_NO, S.STUDENT_NAME);
                                                    
-- 18. 환경조경학과가 속한 같은 계열 학과들의 학과 별 전공과목 평점
SELECT D.DEPARTMENT_NAME "계열 학과명", TO_CHAR(ROUND(AVG(NVL(POINT,0)),1), '9.9')"전공 평점"
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_GRADE G ON (C.CLASS_NO = G.CLASS_NO)
WHERE D.CATEGORY = (SELECT CATEGORY
                    FROM TB_DEPARTMENT
                    WHERE DEPARTMENT_NAME = '환경조경학과')
        AND (C.CLASS_TYPE = '전공필수' OR C.CLASS_TYPE = '전공선택')
GROUP BY D.DEPARTMENT_NAME
ORDER BY "계열 학과명";